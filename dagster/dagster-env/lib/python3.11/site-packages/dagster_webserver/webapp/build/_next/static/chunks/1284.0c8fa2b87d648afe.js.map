{"version":3,"file":"static/chunks/1284.0c8fa2b87d648afe.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-core/src/runs/QueuedRunCriteriaQuery.tsx","webpack://_N_E/../ui-core/src/instance/useRunQueueConfig.tsx","webpack://_N_E/../ui-core/src/runs/QueuedRunCriteriaDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunConfigDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunMetricsDialog.oss.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/useTagPinning.tsx","webpack://_N_E/../ui-core/src/runs/RunRowTags.tsx","webpack://_N_E/../ui-core/src/runs/RunTargetLink.tsx","webpack://_N_E/../ui-core/src/runs/useResolveRunTarget.tsx","webpack://_N_E/../ui-core/src/runs/RunRow.tsx","webpack://_N_E/../ui-core/src/runs/RunTableActionBar.tsx","webpack://_N_E/../ui-core/src/runs/RunTableEmptyState.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTableTargetHeader.tsx","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/../ui-core/src/runs/RunTagsFragment.tsx","webpack://_N_E/../ui-core/src/runs/RunTableRunFragment.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  MiddleTruncate,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\nimport {numberFormatter} from '../ui/formatters';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={displayNameForAssetKey(assetKey)} />\n  </Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={labelForAssetCheck(assetCheck)} />\n  </Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  dialogTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={dialogTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', width: '50vw', maxWidth: '800px', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '500px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\ninterface AssetKeyTagCollectionProps {\n  assetKeys: AssetKey[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetKeyTagCollection = React.memo((props: AssetKeyTagCollectionProps) => {\n  const {assetKeys, useTags, dialogTitle = 'Assets in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {numberFormatter.format(assetKeys.length)} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n              {`${numberFormatter.format(assetKeys.length)} assets`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\ninterface AssetCheckTagCollectionProps {\n  assetChecks: Check[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetCheckTagCollection = React.memo((props: AssetCheckTagCollectionProps) => {\n  const {assetChecks, useTags, dialogTitle = 'Asset checks in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {numberFormatter.format(assetChecks.length)} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n              {`${numberFormatter.format(assetChecks.length)} asset checks`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport {memo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTagsFragment.types';\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  // Prefer user/schedule/sensor\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n    }\n  }\n\n  // If none of those, check for AMP\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(deletionDialogReducer, frozenRuns.current, initializeState);\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql} from '@apollo/client';\n\nexport const QUEUED_RUN_CRITERIA_QUERY = gql`\n  query QueuedRunCriteriaQuery($runId: ID!) {\n    runOrError(runId: $runId) {\n      ... on Run {\n        id\n        rootConcurrencyKeys\n        hasUnconstrainedRootNodes\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceRunQueueConfigQuery,\n  InstanceRunQueueConfigQueryVariables,\n} from './types/useRunQueueConfig.types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\n\nexport const useRunQueueConfig = () => {\n  const queryResult = useQuery<InstanceRunQueueConfigQuery, InstanceRunQueueConfigQueryVariables>(\n    INSTANCE_RUN_QUEUE_CONFIG,\n  );\n  useBlockTraceOnQueryResult(queryResult, 'InstanceRunQueueConfigQuery');\n  return queryResult.data?.instance.runQueueConfig;\n};\n\nconst INSTANCE_RUN_QUEUE_CONFIG = gql`\n  query InstanceRunQueueConfig {\n    instance {\n      id\n      hasInfo\n      runQueueConfig {\n        maxConcurrentRuns\n        tagConcurrencyLimitsYaml\n        isOpConcurrencyAware\n      }\n    }\n  }\n`;\n","import {useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  NonIdealState,\n  SpinnerWithText,\n  Table,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport isPlainObject from 'lodash/isPlainObject';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as yaml from 'yaml';\n\nimport {QUEUED_RUN_CRITERIA_QUERY} from './QueuedRunCriteriaQuery';\nimport {\n  QueuedRunCriteriaQuery,\n  QueuedRunCriteriaQueryVariables,\n} from './types/QueuedRunCriteriaQuery.types';\nimport {RunFragment} from './types/RunFragments.types';\nimport {useRunQueueConfig} from '../instance/useRunQueueConfig';\nimport {StructuredContentTable} from '../metadata/MetadataEntry';\nimport {numberFormatter} from '../ui/formatters';\n\ntype TagConcurrencyLimit = {\n  key: string;\n  value?: string;\n  limit: number;\n};\n\ninterface DialogProps extends ContentProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const QueuedRunCriteriaDialog = (props: DialogProps) => {\n  const {isOpen, onClose, run} = props;\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Run queue criteria\"\n      canOutsideClickClose\n      canEscapeKeyClose\n      onClose={onClose}\n      style={{width: 700}}\n    >\n      <QueuedRunCriteriaDialogContent run={run} />\n      <DialogFooter topBorder>\n        <Button intent=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\ninterface ContentProps {\n  run: Pick<RunFragment, 'id' | 'tags'>;\n}\n\nconst QueuedRunCriteriaDialogContent = ({run}: ContentProps) => {\n  const runQueueConfig = useRunQueueConfig();\n\n  const {data, loading} = useQuery<QueuedRunCriteriaQuery, QueuedRunCriteriaQueryVariables>(\n    QUEUED_RUN_CRITERIA_QUERY,\n    {\n      variables: {\n        runId: run.id,\n      },\n    },\n  );\n\n  const runTagMap = Object.fromEntries(run.tags.map(({key, value}) => [key, value]));\n  const maxConcurrentRuns = runQueueConfig?.maxConcurrentRuns;\n  const runTagLimits = React.useMemo(() => {\n    try {\n      if (!runQueueConfig?.tagConcurrencyLimitsYaml) {\n        return undefined;\n      }\n      const limits: TagConcurrencyLimit[] = yaml.parse(runQueueConfig.tagConcurrencyLimitsYaml);\n      return limits.filter(\n        (limit) =>\n          limit.key in runTagMap &&\n          (limit.value === undefined ||\n            limit.value === runTagMap[limit.key] ||\n            // can be {\"applyLimitPerUniqueValue\": bool}\n            isPlainObject(limit.value)),\n      );\n    } catch (err) {\n      return undefined;\n    }\n  }, [runQueueConfig, runTagMap]);\n\n  if (!runQueueConfig || loading) {\n    return (\n      <Box padding={32} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading run queue criteria…\" />\n      </Box>\n    );\n  }\n\n  if (!data || data.runOrError.__typename !== 'Run') {\n    return (\n      <Box padding={32} flex={{direction: 'row', justifyContent: 'center'}}>\n        <NonIdealState\n          icon=\"run\"\n          title=\"Queue criteria not found\"\n          description=\"Could not load queue criteria for this run.\"\n        />\n      </Box>\n    );\n  }\n\n  const {rootConcurrencyKeys, hasUnconstrainedRootNodes} = data.runOrError;\n\n  const priority = runTagMap['dagster/priority'];\n  const runIsOpConcurrencyLimited =\n    runQueueConfig?.isOpConcurrencyAware &&\n    rootConcurrencyKeys &&\n    rootConcurrencyKeys.length > 0 &&\n    !hasUnconstrainedRootNodes;\n\n  return (\n    <Table>\n      <tbody>\n        {priority ? (\n          <tr>\n            <td>Priority</td>\n            <td>{priority}</td>\n          </tr>\n        ) : null}\n        {maxConcurrentRuns !== undefined ? (\n          <tr>\n            <td>Max concurrent runs</td>\n            <td>{numberFormatter.format(maxConcurrentRuns)}</td>\n          </tr>\n        ) : null}\n        {runTagLimits?.length ? (\n          <tr>\n            <td>Tag concurrency limits:</td>\n            <td>\n              {runTagLimits.map((limit, i) => (\n                <div style={{overflow: 'auto', paddingBottom: 10}} key={`tagLimit:${i}`}>\n                  <StructuredContentTable cellPadding=\"0\" cellSpacing=\"0\">\n                    <tbody>\n                      <tr>\n                        <td style={{width: 80, fontSize: 12}}>\n                          {limit.value !== undefined ? 'Tag' : 'Tag key'}\n                        </td>\n                        <td>\n                          <Tag interactive>\n                            {limit.value !== undefined\n                              ? `${limit.key}=${JSON.stringify(limit.value)}` // might be obj so stringify\n                              : limit.key}\n                          </Tag>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td style={{width: 80, fontSize: 12}}>Limit</td>\n                        <td>{limit.limit}</td>\n                      </tr>\n                    </tbody>\n                  </StructuredContentTable>\n                </div>\n              ))}\n            </td>\n          </tr>\n        ) : null}\n        {runIsOpConcurrencyLimited ? (\n          <tr>\n            <td>\n              <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n                <div>Initial concurrency keys</div>\n                <Tooltip\n                  placement=\"bottom\"\n                  content=\"Op/asset concurrency limits are set on all of the initial steps in this run. This run will not start until there are available slots for at least one step.\"\n                >\n                  <Icon name=\"info\" color={Colors.accentGray()} />\n                </Tooltip>\n              </Box>\n            </td>\n            <td>\n              {rootConcurrencyKeys!.map((key, i) =>\n                runQueueConfig ? (\n                  <Tag interactive key={`rootConcurrency:${i}`}>\n                    <Link to={`/concurrency?key=${key}`}>{key}</Link>\n                  </Tag>\n                ) : (\n                  <Tag interactive key={`rootConcurrency:${i}`}>\n                    {key}\n                  </Tag>\n                ),\n              )}\n            </td>\n          </tr>\n        ) : null}\n      </tbody>\n    </Table>\n  );\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogFooter,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {RunTags} from './RunTags';\nimport {RunTagsFragment} from './types/RunTagsFragment.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  copyConfig: () => void;\n  runConfigYaml: string;\n  mode: string | null;\n  isJob: boolean;\n\n  // Optionally provide tags to display them as well.\n  tags?: RunTagsFragment[];\n}\n\nexport const RunConfigDialog = (props: Props) => {\n  const {isOpen, onClose, copyConfig, runConfigYaml, tags, mode, isJob} = props;\n  const hasTags = !!tags && tags.length > 0;\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      canOutsideClickClose\n      canEscapeKeyClose\n      style={{\n        width: '90vw',\n        maxWidth: '1000px',\n        minWidth: '600px',\n        height: '90vh',\n        maxHeight: '1000px',\n        minHeight: '600px',\n      }}\n      title=\"Run configuration\"\n    >\n      <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n        <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n          {hasTags ? (\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={tags} mode={isJob ? null : mode} />\n              </div>\n            </Box>\n          ) : null}\n          <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n            {hasTags ? (\n              <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n                <Subheading>Config</Subheading>\n              </Box>\n            ) : null}\n            <CodeMirrorContainer>\n              <StyledRawCodeMirror\n                value={runConfigYaml}\n                options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n                theme={['config-editor']}\n              />\n            </CodeMirrorContainer>\n          </Box>\n        </Box>\n        <DialogFooter topBorder>\n          <Button onClick={() => copyConfig()} intent=\"none\">\n            Copy config\n          </Button>\n          <Button onClick={onClose} intent=\"primary\">\n            OK\n          </Button>\n        </DialogFooter>\n      </Box>\n    </Dialog>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n","export const RunMetricsDialog:\n  | null\n  | ((props: {runId: string; isOpen: boolean; onClose: () => void}) => React.ReactElement) = null;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {ReexecutionStrategy} from '../graphql/types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  JoinedButtons,\n  Menu,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Popover,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport {RunMetricsDialog} from 'shared/runs/RunMetricsDialog.oss';\nimport styled from 'styled-components';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {RunConfigDialog} from './RunConfigDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelineLinkForRun} from '../workspace/workspacePath';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags' | 'metrics'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const onCopy = async () => {\n    copyConfig(runConfigYaml || '');\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n  const runMetricsEnabled = run.tags.some((t) => t.key === DagsterTag.RunMetrics);\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  const jobLink = workspacePipelineLinkForRun({\n    run,\n    repositoryName: repoMatch?.match.repository.name,\n    repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n    isJob,\n  });\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"history\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={jobLink.disabledReason || OPEN_LAUNCHPAD_UNKNOWN}\n                  position=\"left\"\n                  disabled={infoReady && !jobLink.disabledReason}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text={jobLink.label}\n                    disabled={!infoReady || !!jobLink.disabledReason}\n                    icon={jobLink.icon}\n                    to={jobLink.to}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {runMetricsEnabled && RunMetricsDialog ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"asset_plot\"\n                  text=\"View container metrics\"\n                  intent=\"none\"\n                  onClick={() => setVisibleDialog('metrics')}\n                />\n              ) : null}\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {runMetricsEnabled && RunMetricsDialog ? (\n        <RunMetricsDialog\n          runId={run.id}\n          isOpen={visibleDialog === 'metrics'}\n          onClose={closeDialogs}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <RunConfigDialog\n        isOpen={visibleDialog === 'config'}\n        onClose={closeDialogs}\n        copyConfig={onCopy}\n        mode={run.mode}\n        runConfigYaml={runConfigYaml || ''}\n        isJob={isJob}\n      />\n    </>\n  );\n});\n\ninterface RunBulkActionsMenuProps {\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}\n\nexport const RunBulkActionsMenu = React.memo((props: RunBulkActionsMenuProps) => {\n  const {selected, clearSelection} = props;\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.canTerminate;\n      return accum;\n    },\n    {} as Record<string, boolean>,\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce(\n    (accum, run) => {\n      accum[run.id] = run.canTerminate;\n      return accum;\n    },\n    {} as Record<string, boolean>,\n  );\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.id;\n      return accum;\n    },\n    {} as Record<string, string>,\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => {\n      accum[run.id] = run.id;\n      return accum;\n    },\n    {} as Record<string, string>,\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.backgroundLight()};\n  color: ${Colors.textLight()};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {useCallback} from 'react';\n\nimport {DagsterTag} from './RunTag';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nexport function useTagPinning() {\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    validateIsArray,\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', validateIsArray);\n\n  const onToggleTagPin = useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  const isTagPinned = useCallback(\n    (tag: {key: string}) => {\n      return isUnpinnedByDefaultSystemTag(tag.key)\n        ? pinnedSystemTags.indexOf(tag.key) !== -1\n        : unpinnedTags.indexOf(tag.key) === -1;\n    },\n    [pinnedSystemTags, unpinnedTags],\n  );\n\n  return {\n    isTagPinned,\n    onToggleTagPin,\n  };\n}\n\nfunction validateIsArray(value: any) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [];\n}\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n","import {\n  Button,\n  ButtonLink,\n  Caption,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {useTagPinning} from './useTagPinning';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {PipelineTag} from '../graphql/types';\n\nexport const RunRowTags = ({\n  run,\n  onAddTag,\n  isHovered,\n  isJob,\n}: {\n  run: RunTableRunFragment;\n  onAddTag?: (token: RunFilterToken) => void;\n  isHovered: boolean;\n  isJob: boolean;\n}) => {\n  const {isTagPinned, onToggleTagPin} = useTagPinning();\n  const [showRunTags, setShowRunTags] = React.useState(false);\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<PipelineTag, '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({key: 'mode', value: run.mode});\n    }\n    return allTags.map((tag) => {\n      return {...tag, pinned: isTagPinned(tag)};\n    });\n  }, [run, isJob, isTagPinned]);\n\n  const tagsToShow = React.useMemo(() => {\n    const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [allTagsWithPinned, run.assetSelection?.length]);\n\n  return (\n    <>\n      <RunTagsWrapper>\n        {tagsToShow.length ? (\n          <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        ) : null}\n      </RunTagsWrapper>\n      {allTagsWithPinned.length > tagsToShow.length ? (\n        <Caption>\n          <ButtonLink\n            onClick={() => {\n              setShowRunTags(true);\n            }}\n            color={Colors.textLight()}\n            style={{margin: '-4px', padding: '4px'}}\n          >\n            View all tags ({allTagsWithPinned.length})\n          </ButtonLink>\n        </Caption>\n      ) : null}\n\n      {isHovered && allTagsWithPinned.length ? (\n        <ShortcutHandler\n          key=\"runtabletags\"\n          onShortcut={() => {\n            setShowRunTags((showRunTags) => !showRunTags);\n          }}\n          shortcutLabel=\"t\"\n          shortcutFilter={(e) => e.code === 'KeyT'}\n        >\n          {null}\n        </ShortcutHandler>\n      ) : null}\n\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n","import {Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {AssetCheckTagCollection, AssetKeyTagCollection} from './AssetTagCollections';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RepoAddress} from '../workspace/types';\n\nexport const RunTargetLink = ({\n  run,\n  isJob,\n  repoAddress,\n}: {\n  isJob: boolean;\n  run: RunTableRunFragment;\n  repoAddress: RepoAddress | null;\n}) => {\n  return isHiddenAssetGroupJob(run.pipelineName) ? (\n    <Box flex={{gap: 16, alignItems: 'end', wrap: 'wrap'}}>\n      <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n      <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n    </Box>\n  ) : (\n    <PipelineReference\n      isJob={isJob}\n      showIcon\n      pipelineName={run.pipelineName}\n      pipelineHrefContext={repoAddress || 'repo-unknown'}\n    />\n  );\n};\n","import React from 'react';\n\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\n\nexport function useResolveRunTarget(run: RunTableRunFragment): {\n  isJob: boolean;\n  repoAddressGuess: RepoAddress | null;\n} {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  return {isJob, repoAddressGuess};\n}\n","import {Box, ButtonLink, Caption, Checkbox, Colors, Mono, Tag} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {QueuedRunCriteriaDialog} from './QueuedRunCriteriaDialog';\nimport {RunActionsMenu} from './RunActionsMenu';\nimport {RunRowTags} from './RunRowTags';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag} from './RunTag';\nimport {RunTargetLink} from './RunTargetLink';\nimport {RunStateSummary, RunTime, titleForRun} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {useResolveRunTarget} from './useResolveRunTarget';\nimport {RunStatus} from '../graphql/types';\n\nexport const RunRow = ({\n  run,\n  hasCheckboxColumn,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}: {\n  run: RunTableRunFragment;\n  hasCheckboxColumn: boolean;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}) => {\n  const {isJob, repoAddressGuess} = useResolveRunTarget(run);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const [showQueueCriteria, setShowQueueCriteria] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {hasCheckboxColumn ? (\n        <td>\n          {canTerminateOrDelete ? (\n            <>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</>\n          ) : null}\n        </td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          <RunTargetLink isJob={isJob} run={run} repoAddress={repoAddressGuess} />\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunRowTags run={run} isJob={isJob} isHovered={isHovered} onAddTag={onAddTag} />\n\n            {run.status === RunStatus.QUEUED ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowQueueCriteria(true);\n                  }}\n                  color={Colors.textLight()}\n                >\n                  View queue criteria\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <QueuedRunCriteriaDialog\n        run={run}\n        isOpen={showQueueCriteria}\n        onClose={() => setShowQueueCriteria(false)}\n      />\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n","import {Box, Colors} from '@dagster-io/ui-components';\n\nexport function RunTableActionBar({\n  top,\n  bottom,\n  sticky,\n}: {\n  top: React.ReactNode;\n  bottom?: React.ReactNode;\n  sticky?: boolean;\n}) {\n  return (\n    <Box\n      flex={{direction: 'column'}}\n      padding={{vertical: 12}}\n      style={\n        sticky\n          ? {position: 'sticky', top: 0, background: Colors.backgroundDefault(), zIndex: 2}\n          : {}\n      }\n    >\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import {Box, Icon, NonIdealState} from '@dagster-io/ui-components';\n\nimport {AnchorButton} from '../ui/AnchorButton';\n\nexport const RunTableEmptyState = ({anyFilter}: {anyFilter: boolean}) => {\n  return (\n    <div>\n      <Box margin={{vertical: 32}}>\n        {anyFilter ? (\n          <NonIdealState\n            icon=\"run\"\n            title=\"No matching runs\"\n            description=\"No runs were found for this filter.\"\n          />\n        ) : (\n          <NonIdealState\n            icon=\"run\"\n            title=\"No runs found\"\n            description={\n              <Box flex={{direction: 'column', gap: 12}}>\n                <div>You have not launched any runs yet.</div>\n                <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                  <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                    Launch a run\n                  </AnchorButton>\n                  <span>or</span>\n                  <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                    Materialize an asset\n                  </AnchorButton>\n                </Box>\n              </Box>\n            }\n          />\n        )}\n      </Box>\n    </div>\n  );\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {ProductTour, ProductTourPosition} from '@dagster-io/ui-components';\n\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nexport function RunTableTargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n","import {Box, Checkbox, Table} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunRow} from './RunRow';\nimport {RunTableActionBar} from './RunTableActionBar';\nimport {RunTableEmptyState} from './RunTableEmptyState';\nimport {RunTableTargetHeader} from './RunTableTargetHeader';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTableRunFragment.types';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarSticky?: boolean;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarSticky,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return <RunTableEmptyState anyFilter={anyFilter} />;\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <RunTableTargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                hasCheckboxColumn={canTerminateOrDeleteAny}\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <RunTableActionBar\n        sticky={actionBarSticky}\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n","import {gql} from '@apollo/client';\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n","import {gql} from '@apollo/client';\n\nimport {RUN_TAGS_FRAGMENT} from './RunTagsFragment';\nimport {RUN_TIME_FRAGMENT} from './RunUtils';\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n"],"names":["renderItemAssetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","assetKey","style","display","width","MiddleTruncate","text","displayNameForAssetKey","renderItemAssetCheck","assetDetailsPathForAssetCheck","assetCheck","labelForAssetCheck","check","name","concat","useShowMoreDialog","dialogTitle","items","renderItem","showMore","setShowMore","React","dialog","length","jsxs","Dialog","title","onClose","minWidth","maxWidth","maxHeight","isOpen","div","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","intent","autoFocus","onClick","undefined","AssetKeyTagCollection","assetKeys","useTags","props","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","interactive","icon","Box","flex","direction","gap","alignItems","Icon","color","Colors","size","globalAssetGraphPathForAssetsAndDescendants","numberFormatter","format","ButtonLink","underline","AssetCheckTagCollection","assetChecks","CreatedByTagCell","memo","repoAddress","tags","onAddTag","param","CreatedByTag","pluckTagFromList","tag","DagsterTag","User","type","ScheduleName","SensorName","Automaterialize","CreatedBy","AutoObserve","UserDisplay","useLaunchPadHooks","plucked","tagElement","buildTagElement","email","workspacePathFromAddress","token","refineToError","deletePipelineRun","__typename","initializeState","step","frozenRuns","deletion","completed","errors","deletionDialogReducer","prevState","action","id","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","useRef","state","dispatch","useReducer","current","runIDs","Object","keys","count","terminatableCount","filter","useEffect","destroy","useMutation","DELETE_MUTATION","mutate","runId","variables","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","ul","map","li","Mono","slice","buttons","disabled","QUEUED_RUN_CRITERIA_QUERY","gql","useRunQueueConfig","queryResult","useQuery","INSTANCE_RUN_QUEUE_CONFIG","useBlockTraceOnQueryResult","instance","runQueueConfig","QueuedRunCriteriaDialog","run","jsx_runtime","QueuedRunCriteriaDialogContent","loading","runTagMap","fromEntries","maxConcurrentRuns","runTagLimits","tagConcurrencyLimitsYaml","limits","yaml","limit","isPlainObject","err","padding","justifyContent","SpinnerWithText","runOrError","NonIdealState","description","rootConcurrencyKeys","hasUnconstrainedRootNodes","priority","runIsOpConcurrencyLimited","isOpConcurrencyAware","Table","tbody","tr","td","i","paddingBottom","StructuredContentTable","cellPadding","cellSpacing","fontSize","JSON","stringify","Tooltip","placement","content","RunConfigDialog","copyConfig","runConfigYaml","mode","isJob","hasTags","minHeight","top","horizontal","Subheading","RunTags","border","left","bottom","CodeMirrorContainer","StyledRawCodeMirror","options","readOnly","lineNumbers","theme","styled","withConfig","RunMetricsDialog","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecutionParams","parentRunId","strategy","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","useCopyToClipboard","onCopy","showSharedToaster","useJobReexecution","onCompleted","loadEnv","called","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","closeDialogs","pipelineRun","pipelineRunOrError","runMetricsEnabled","some","t","RunMetrics","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","jobLink","workspacePipelineLinkForRun","repositoryName","repository","repositoryLocationName","repositoryLocation","JoinedButtons","AnchorButton","Popover","Menu","MenuItem","tagName","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","disabledReason","OPEN_LAUNCHPAD_UNKNOWN","position","targetTagName","MenuLink","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","validateIsArray","isArray","isUnpinnedByDefaultSystemTag","startsWith","Namespace","Partition","Backfill","toggleTag","tagsArr","tagKey","indexOf","RunRowTags","isHovered","isTagPinned","onToggleTagPin","useTagPinning","pinnedSystemTags","setPinnedSystemTags","useStateWithStorage","unpinnedTags","setUnpinnedTags","useCallback","showRunTags","setShowRunTags","allTagsWithPinned","allTags","push","pinned","tagsToShow","targetBackfill","find","tagKeys","Set","link","assetSelection","runsPathWithFilters","add","forEach","RunTagsWrapper","Caption","margin","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","e","code","RunTargetLink","isHiddenAssetGroupJob","wrap","assetKeysForRun","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","RunRow","hasCheckboxColumn","canTerminateOrDelete","checked","onToggleChecked","additionalColumns","isHighlighted","hideCreatedBy","repoAddressGuess","useResolveRunTarget","repo","useRepositoryForRunWithoutSnapshot","pipelinesAndJobs","pipelines","pipelineOrJob","buildRepoAddress","isReexecution","ParentRunId","showQueueCriteria","setShowQueueCriteria","setIsHovered","Row","highlighted","onMouseEnter","onMouseLeave","Checkbox","onChange","target","HTMLInputElement","shiftKey","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","RunStatus","QUEUED","RunStatusTagWithStats","RunStateSummary","RunTableActionBar","sticky","vertical","background","zIndex","right","RunTableEmptyState","anyFilter","RunTableTargetHeader","hideTabPinningNux","setHideTabPinningNux","ProductTour","ProductTourPosition","BOTTOM_RIGHT","video","dismiss","RunTable","runs","highlightedIds","actionBarSticky","actionBarComponents","belowActionBarComponents","emptyState","allIds","checkedIds","onToggleFactory","onToggleAll","useSelectionReducer","canTerminateOrDeleteAny","selectedFragments","grow","thead","th","paddingTop","indeterminate","additionalColumnHeaders","additionalColumnsForRow","includes","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT"],"sourceRoot":""}